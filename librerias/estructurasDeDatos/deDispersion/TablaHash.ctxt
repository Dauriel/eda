#BlueJ class context
comment0.target=TablaHash
comment0.text=\r\n\ Implementacion\ de\ una\ TablaHash\ Enlazada\ con\ Listas\ con\ PI\ \r\n\ @param\ <C>,\ tipo\ de\ las\ claves\ de\ la\ Tabla\ Hash,\ deben\ implementar\ hashCode\r\n\ @param\ <V>,\ tipo\ de\ los\ valores\ asociados\ a\ las\ claves\ de\ una\ Tabla\ Hash\r\n\ @author\ (EDA)\r\n\ @version\ (Febrero\ 2016)\r\n
comment1.params=inicial
comment1.target=TablaHash(int)
comment1.text=\ Crea\ una\ Tabla\ Hash\ vacia,\ con\ una\ capacidad\ (inicial)\ maxima\ \ \r\n\ \ de\ tallaMaximaEstimada\ entradas\ y\ factor\ de\ carga\ 0.75\r\n
comment10.params=
comment10.target=double\ factorCarga()
comment10.text=\ Devuelve\ el\ factor\ de\ carga\ actual\ de\ una\ Tabla\ Hash,\ i.e.\ la\ longitud\r\nmedia\ de\ sus\ cubetas
comment11.params=
comment11.target=void\ rehashing()
comment12.params=
comment12.target=librerias.estructurasDeDatos.modelos.ListaConPI\ claves()
comment12.text=Devuelve\ una\ ListaConPI\ con\ las\ talla()\ claves\ de\ una\ Tabla\ Hash
comment13.params=
comment13.target=double\ desviacionTipica()
comment13.text=Calcula\ la\ desviacion\ tipica\ de\ las\ longitudes\ de\ las\ listas
comment14.params=
comment14.target=java.lang.String\ histograma()
comment14.text=\ Devuelve\ un\ String\ que\ representa\ el\ histograma\ de\ ocupacion\:\r\n\ lineas,\ cada\ una\ de\ ellas\ con\ dos\ valores\:\ \r\n\ longitudCubeta\ \ NumeroDeCubetas\ \r\n\ donde\:\r\n\ -\ las\ lineas\ 0\ a\ 8\ contienen\ el\ numero\ de\ cubetas\ de\ esa\ longitud,\ \r\n\ \ \ 0<\=longitud<9\r\n\ la\ ultima\ linea\ (9)\ contiene\ el\ numero\ de\ cubetas\ de\ longitud\ 9\ o\ mas\r\n
comment15.params=
comment15.target=int[]\ arrayBucketLength()
comment2.params=n
comment2.target=int\ siguientePrimo(int)
comment3.params=n
comment3.target=boolean\ esPrimo(int)
comment4.params=c
comment4.target=int\ indiceHash(java.lang.Object)
comment5.params=c
comment5.target=java.lang.Object\ recuperar(java.lang.Object)
comment5.text=\ Devuelve\ el\ valor\ de\ la\ entrada\ con\ clave\ c,\r\n\ \ o\ null\ si\ no\ hay\ una\ entrada\ con\ clave\ c\ en\ la\ Tabla\r\n
comment6.params=c
comment6.target=java.lang.Object\ eliminar(java.lang.Object)
comment6.text=\ Elimina\ la\ entrada\ con\ clave\ c\ y\ devuelve\ su\ valor\ \r\n\ \ asociado,\ o\ null\ si\ no\ hay\ ninguna\ entrada\ con\ clave\ c\ \r\n
comment7.params=c\ v
comment7.target=java.lang.Object\ insertar(java.lang.Object,\ java.lang.Object)
comment7.text=\ Inserta\ la\ entrada\ (c,\ v)\ \ a\ una\ Tabla\ Hash\ y\ devuelve\ \ \r\n\ \ el\ antiguo\ valor\ asociado\ a\ c,\ o\ null\ si\ no\ hay\ ninguna\ \r\n\ \ entrada\ con\ clave\ c\ en\ la\ Tabla\r\n
comment8.params=
comment8.target=boolean\ esVacio()
comment8.text=Comprueba\ si\ una\ Tabla\ Hash\ esta\ vacia,\ i.e.\ si\ tiene\ 0\ entradas.
comment9.params=
comment9.target=int\ talla()
comment9.text=Devuelve\ la\ talla,\ o\ numero\ de\ entradas,\ de\ una\ Tabla\ Hash.
numComments=16
