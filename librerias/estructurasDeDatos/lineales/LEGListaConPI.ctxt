#BlueJ class context
comment0.target=LEGListaConPI
comment0.text=\ Implementa\ la\ interfaz\ ListaConPI\ mediante\ una\ LEG\ ...\r\n\ \ (a)\ Con\ Nodo\ ficticio\ cabecera\ .\r\n\ \ (b)\ Una\ referencia\ al\ primer\ Nodo\ \ .\r\n\ \ (c)\ Una\ referencia\ al\ ultimo\ Nodo.\r\n\ \ (d)\ Para\ representar\ el\ Punto\ de\ Interes,\ una\ referencia\ al\ Nodo\ \r\n\ \ \ \ \ \ \ anterior\ al\ que\ ocupa\ el\ punto\ de\ interes.\r\n\ \ (e)\ Un\ int\ talla\ que\ representa\ la\ talla\ de\ la\ LEG.\r\n\r\n\ \ @version\ Febrero\ 2014\ *\ \ \r\n\ @param\ <E>\ tipo\ de\ datos\ de\ la\ estructura\r\n
comment1.params=
comment1.target=LEGListaConPI()
comment1.text=construye\ una\ Lista\ Con\ PI\ vacia\ *
comment10.params=
comment10.target=int\ talla()
comment10.text=\ devuelve\ la\ talla\ de\ una\ Lista\ Con\ PI,\ i.e.\ su\ \r\n\ numero\ de\ elementos.\r\n\r\n\ @return\ int,\ el\ numero\ de\ Elementos\ de\ una\ Lista\ con\ PI.\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ devuelve\ el\ String\ con\ los\ Elementos\ de\ una\ Lista\ con\ PI\ \r\n\ en\ orden\ de\ insercion.\r\n\ \r\n\ @return\ String\ que\ contiene\ los\ Elementos\ de\ una\ Lista\ con\ \r\n\ PI,\ en\ el\ mismo\ formato\ que\ usa\ el\ estandar\ de\ Java\ para\ \r\n\ los\ arrays.\r\n
comment2.params=e
comment2.target=void\ insertar(java.lang.Object)
comment2.text=\ inserta\ e\ en\ una\ Lista\ antes\ del\ Elemento\ que\ ocupa\ su\ PI,\ \r\n\ que\ permanece\ inalterado.\r\n\r\n\ @param\ e\ Elememto\ a\ insertar.\r\n
comment3.params=
comment3.target=void\ eliminar()
comment3.text=\ SII\ \!esFin()\:\ elimina\ de\ una\ Lista\ el\ Elemento\ que\ ocupa\ \r\n\ su\ PI\ que\ permanece\ inalterado.\ \r\n
comment4.params=
comment4.target=void\ inicio()
comment4.text=\ situa\ el\ PI\ de\ una\ Lista\ en\ su\ inicio,\ sobre\ su\ primer\ \r\n\ elemento\ si\ no\ esta\ vacia.\r\n
comment5.params=
comment5.target=void\ siguiente()
comment5.text=\ SII\ \!esFin()\:\ situa\ sobre\ el\ siguiente\ Elemento\ el\ PI\ \r\n\ de\ una\ Lista.\ \ \r\n
comment6.params=
comment6.target=void\ fin()
comment6.text=\ situa\ el\ PI\ de\ una\ Lista\ en\ su\ fin,\ detras\ de\ su\ ultimo\ \r\n\ Elemento\ si\ no\ esta\ vacia.\ \r\n
comment7.params=
comment7.target=java.lang.Object\ recuperar()
comment7.text=\ SII\ \!esFin()\:\ obtiene\ el\ Elemento\ que\ ocupa\ el\ PI\ de\ \r\n\ una\ Lista.\r\n\r\n\ @return\ E,\ el\ Elemento\ que\ ocupa\ el\ PI\ de\ una\ Lista.\r\n
comment8.params=
comment8.target=boolean\ esFin()
comment8.text=\ comprueba\ si\ el\ PI\ de\ una\ Lista\ esta\ en\ su\ fin.\r\n\r\n\ \ @return\ true\ si\ el\ PI\ de\ una\ Lista\ esta\ en\ su\ fin\ y\ \r\n\ false\ en\ caso\ contrario\r\n
comment9.params=
comment9.target=boolean\ esVacia()
comment9.text=\ comprueba\ si\ una\ Lista\ Con\ PI\ esta\ vacia\r\n\r\n\ \ @return\ true\ si\ una\ Lista\ Con\ PI\ esta\ vacia\ y\ \r\n\ false\ en\ caso\ contrario\r\n
numComments=12
